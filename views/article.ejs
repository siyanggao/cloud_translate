<%- include header %>

<el-row :gutter="5">
<el-col :span="3"><%- include left %></el-col>
<el-col :span="21">
<div class="block" style="margin:5px">
    <span class="demonstration">title:</span>
    <el-input v-model="page.search_title" placeholder="title" style="width:180px"></el-input>
    <el-button type="primary" @click="search">search</el-button>
</div>
<el-button @click="clearForm();formVisible = true;" style="margin:5px" type="primary">add</el-button>
<el-table :data="tableData" border style="width: 100%">
	<el-table-column prop="id" label="id" width="60"></el-table-column>
	<el-table-column prop="title" label="title" width="200"></el-table-column>
	<el-table-column prop="origin" label="origin" width="120"></el-table-column>
	<el-table-column prop="publish_date" label="publish_date" width="110"></el-table-column>
	<el-table-column prop="content_brief" label="content_brief" width="250"></el-table-column>
	<el-table-column prop="image_path" label="image" width="150">
		<template scope="scope"><a v-bind:href="scope.row.image_path">
			<img v-bind:src="scope.row.image_path" style="width:150px;height:80px"/>
		</a></template>
	</el-table-column>
	<el-table-column prop="gmt_create" label="gmt_create" width="110"></el-table-column>
	<el-table-column prop="gmt_modified" label="gmt_modified" width="110"></el-table-column>
	<el-table-column label="operate" width="150">
      <template scope="scope">
        <el-button @click="handleEdit(scope.$index, scope.row)"  size="small">edit</el-button>
        <el-button @click="handleDelete(scope.$index, scope.row)" size="small" type="danger">delete</el-button>
      </template>
    </el-table-column>
</el-table>
<el-pagination style="float:right"
      @size-change="handleSizeChange"
      @current-change="handleCurrentChange"
      :current-page="page.currentPage"
      :page-sizes="[10, 15, 50, 100]"
      :page-size="page.pageSize"
      layout="total, sizes, prev, pager, next, jumper"
      :total="page.totalSize">
    </el-pagination>
</el-col>
</el-row>

<el-dialog title="dialog" :visible.sync="formVisible">
  <el-form :model="form">
    <el-form-item label="title" :label-width="formLabelWidth">
      <el-input v-model="form.title"></el-input>
    </el-form-item>
    <el-form-item label="origin" :label-width="formLabelWidth">
      <el-input v-model="form.origin"></el-input>
    </el-form-item>
    <el-form-item label="publish_date" :label-width="formLabelWidth">
	    <el-col :span="11">
	      <el-date-picker type="date" placeholder="choice date" v-model="form.publish_date" style="width: 100%;"></el-date-picker>
	    </el-col>
	</el-form-item>
	<el-form-item label="content" :label-width="formLabelWidth">
      <el-input v-model="form.content"></el-input>
    </el-form-item>
    <el-form-item label="content_brief" :label-width="formLabelWidth">
      <el-input v-model="form.content_brief"></el-input>
    </el-form-item>
    <el-form-item label="image" :label-width="formLabelWidth">
    	<el-upload
		  action="/upload"
		  :data={type:'article'}
		  list-type="picture-card"
		  ref="upload"
		  :file-list="form.fileList_image"
		  :multiple=false
		  :on-success="handleUploadSuccess">
		  <i class="el-icon-plus"></i>
		</el-upload>
		<el-dialog v-model="dialogVisible" size="tiny">
		  <img width="100%" :src="dialogImageUrl" alt="">
		</el-dialog>
    </el-form-item>
  </el-form>
  <div slot="footer" class="dialog-footer">
    <el-button @click="formVisible = false">取 消</el-button>
    <el-button type="primary" @click="handleOk">确 定</el-button>
  </div>
</el-dialog>

</div>
<script type="text/javascript">
	var app = new Vue({
	  el: '#app',
	  data: {
	    tableData:<%- tableData%>,
	    formVisible: false,
	    form: {
	      id:0,
          title: '',
          origin:'',
          publish_date:'',
          content:'',
          content_brief:'',
          upload_url:'',
          fileList_image:[]
        },
        formLabelWidth: '120px',
		dialogImageUrl:'',
		dialogVisible:false,
		page:{
			currentPage:1,
			pageSize:10,
			totalSize:<%=totalSize%>,
			search_title:''
		}
	  },
	  created:function(){
	  },
	  methods:{
	  	handleEdit:function(index,row){
	  		this.formVisible = true;
	  		this.form.id = row.id;
	  		this.form.title = row.title;
	  		this.form.origin = row.origin;
	  		this.form.publish_date = row.publish_date;
	  		this.form.content = row.content;
	  		this.form.content_brief = row.content_brief;
	  		this.form.upload_url = row.image_path;
	  		this.form.fileList_image = [{name:'name',url:row.image_path}];
	  	},
	  	handleOk:function(){
	  		if(this.form.id==0) this.add();
	  		else this.edit();
	  	},
	  	handleDelete:function(index,row){
	  		this.$confirm('this operate will delete forever,ready to delete?','confirm',{
	  			confirmButtonText: 'ok',
		        cancelButtonText: 'cancel',
		        type: 'warning'
	  		}).then(()=>{
	  			Vue.http.post('delete',{id:row.id}).then(response=>{
		  			if(response.body==1){
		  				this.$message({
				          message: 'delete success',
				          type: 'success'
				        });
		  			}else{
		  				this.$message.error('delete failure');
		  			}
		  		});
	  		});
	  		
	  	},
	  	add(){
	  		Vue.http.post('add',this.form).then(response=>{
	  			console.log(response);
	  			if(response.body==1){
	  				this.$message({
			          message: 'add success',
			          type: 'success'
			        });
			        this.formVisible = false;
			        this.clearForm();
	  			}else{
	  				this.$message.error('add failure');
	  			}
	  		});
	  	},
	  	edit(){
	  		Vue.http.post('edit',this.form).then(response=>{
	  			console.log(response);
	  			if(response.body==1){
	  				this.$message({
			          message: 'edit success',
			          type: 'success'
			        });
			        this.formVisible = false;
	  			}else{
	  				this.$message.error('edit failure');
	  			}
	  		});
	  	},
	  	handleUploadSuccess(res, file){
  			this.form.upload_url = res;
	  	},
  		handleSizeChange(val) {
  			this.page.pageSize = val;
  			this.$http.post('',this.page).then(response=>{
    			this.tableData = response.body;
	    	});
	    },
	    handleCurrentChange(val) {
	    	this.page.currentPage = val;
	    	this.$http.post('',this.page).then(response=>{
    			this.tableData = response.body;
	    	});
	    },
	    search(){
	    	this.page.currentPage = 1;
	    	this.page.pageSize = 10;
	    	this.$http.post('',this.page).then(response=>{
    			this.tableData = response.body;
	    	});
	    },
	    clearForm(){
	    	this.form.id = 0;
	    	this.form.title = '';
	    	this.form.origin = '';
	    	this.form.publish_date = '';
	    	this.form.content = '';
	    	this.form.content_brief = '';
	    	this.form.upload_url = '';
	    	if(this.$refs.upload!=null) this.$refs.upload.clearFiles();
	    }
      }
	});
</script>
<%- include footer %>